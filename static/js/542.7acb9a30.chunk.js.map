{"version":3,"file":"static/js/542.7acb9a30.chunk.js","mappings":"8PACA,EAA0B,4B,SCsB1B,EAlBmB,WACjB,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,oBACEC,UAAWC,EACXC,KAAK,SACLC,QAAS,WAAO,IAAD,IACbL,EAAQ,iBAACF,QAAD,IAACA,GAAD,UAACA,EAAUQ,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,IACnC,EALH,WAOE,SAAC,MAAD,CAA0BC,KAAM,KAPlC,YAWH,E,2BCpBD,EAA+B,mCAA/B,EAA6E,+BAA7E,EAAwH,gCAAxH,EAA6K,yCAA7K,EAA8O,4CCgG9O,EAvFqB,WACnB,OAAkCC,EAAAA,EAAAA,UAAS,CAAC,GAA5C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFhB,GAAWC,EAAAA,EAAAA,OAEjBiB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,6FACjBJ,GAAa,GADI,UAGOK,EAAAA,EAAAA,IAAaJ,GAHpB,OAGXJ,EAHW,OAKXS,GAASC,EAAAA,EAAAA,GAAUV,EAAUW,aACnCX,EAAUS,OAASA,EAEnBR,EAAaD,GACbG,GAAa,GATI,2CAAH,qDAYhBI,GACD,GAAE,CAACH,IAEJ,IAAMQ,EAAU,UAAMZ,EAAUa,MAAhB,YAAyB,IAAIC,KAC3Cd,EAAUe,cACVC,eAEIC,EAAS,uBAAmBC,KAAKC,MAA+B,GAAzBnB,EAAUoB,cAAxC,MAETC,EACJrB,EAAUsB,QAAUtB,EAAUsB,OAAOC,OAAS,EAC1CvB,EAAUsB,OAAOE,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,KAC/C,UAEN,OACE,4BACE,SAAC,EAAD,IACCzB,IAAa,SAAC0B,EAAA,EAAD,KAEZ1B,IACA,iCACE,iBAAKV,UAAWC,EAAhB,WACE,gBACED,UAAWC,EACXoC,IAAK7B,EAAUS,OACfqB,IAAK9B,EAAUa,SAEjB,iBAAKrB,UAAWC,EAAhB,WACE,wBAAKmB,KACL,uBAAIK,KACJ,iBAAKzB,UAAWC,EAAhB,WACE,sCACA,uBAAIO,EAAU+B,eAEhB,iBAAKvC,UAAWC,EAAhB,WACE,oCACA,uBAAI4B,cAKV,iBAAK7B,UAAWC,EAAhB,WACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAASuC,GAAI,OAAQpC,MAAOR,EAASQ,MAArC,qBAIF,yBACE,SAAC,KAAD,CAASoC,GAAI,UAAWpC,MAAOR,EAASQ,MAAxC,8BAON,SAAC,EAAAqC,SAAD,CAAUC,UAAU,SAACN,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,WAMX,C,sDC/FM,IAAMlB,EAAY,SAAAyB,GACvB,OAAiB,OAAbA,QAAkCC,IAAbD,EACjB,kCAAN,OAAyCA,GAElC,2DAEV,C","sources":["webpack://goit-react-hw-05-movies/./src/components/BackButton/BackButton.module.css?d3a5","components/BackButton/BackButton.jsx","webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","utils/getImgUrl.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"backBtn\":\"BackButton_backBtn__g7sA7\"};","import { useNavigate, useLocation } from 'react-router-dom';\nimport { HiOutlineArrowNarrowLeft } from 'react-icons/hi';\n\nimport styles from './BackButton.module.css';\n\nconst BackButton = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  return (\n    <button\n      className={styles.backBtn}\n      type=\"button\"\n      onClick={() => {\n        navigate(location?.state?.from ?? '/');\n      }}\n    >\n      <HiOutlineArrowNarrowLeft size={30} />\n      Go back\n    </button>\n  );\n};\n\nexport default BackButton;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieWrapper\":\"MovieDetails_movieWrapper__u2mNI\",\"movieImg\":\"MovieDetails_movieImg__5UJtY\",\"movieInfo\":\"MovieDetails_movieInfo__4EKMk\",\"movieInfoWithTitle\":\"MovieDetails_movieInfoWithTitle__Qy-bc\",\"additionalInfoWrapper\":\"MovieDetails_additionalInfoWrapper__URkTY\"};","import { useEffect, useState, Suspense } from 'react';\nimport { NavLink, useParams, useLocation, Outlet } from 'react-router-dom';\n\nimport BackButton from 'components/BackButton/BackButton';\nimport Loader from 'components/Loader/Loader';\nimport { getMovieById } from 'utils/movieApi';\nimport { getImgUrl } from 'utils/getImgUrl';\n\nimport styles from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const [movieData, setMovieData] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n  \n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      setIsLoading(true);\n\n      const movieData = await getMovieById(movieId);\n\n      const imgUrl = getImgUrl(movieData.poster_path);\n      movieData.imgUrl = imgUrl;\n\n      setMovieData(movieData);\n      setIsLoading(false);\n    };\n\n    fetchMovie();\n  }, [movieId]);\n\n  const movieTitle = `${movieData.title} ${new Date(\n    movieData.release_date\n  ).getFullYear()}`;\n\n  const userScore = `User Score: (${Math.round(movieData.vote_average * 10)}%)`;\n\n  const genresNames =\n    movieData.genres && movieData.genres.length > 0\n      ? movieData.genres.map(genre => genre.name).join(' ')\n      : 'unknown';\n\n  return (\n    <div>\n      <BackButton />\n      {isLoading && <Loader />}\n\n      {!isLoading && (\n        <>\n          <div className={styles.movieWrapper}>\n            <img\n              className={styles.movieImg}\n              src={movieData.imgUrl}\n              alt={movieData.title}\n            />\n            <div className={styles.movieInfo}>\n              <h1>{movieTitle}</h1>\n              <p>{userScore}</p>\n              <div className={styles.movieInfoWithTitle}>\n                <h3>Overview</h3>\n                <p>{movieData.overview}</p>\n              </div>\n              <div className={styles.movieInfoWithTitle}>\n                <h4>Genres</h4>\n                <p>{genresNames}</p>\n              </div>\n            </div>\n          </div>\n\n          <div className={styles.additionalInfoWrapper}>\n            <h3>Additional information</h3>\n            <ul>\n              <li>\n                <NavLink to={'cast'} state={location.state}>\n                  Cast\n                </NavLink>\n              </li>\n              <li>\n                <NavLink to={'reviews'} state={location.state}>\n                  Reviews\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","export const getImgUrl = imageUrl => {\n  if (imageUrl !== null && imageUrl !== undefined) {\n    return `https://image.tmdb.org/t/p/w300${imageUrl}`;\n  } else {\n    return 'https://img.icons8.com/pastel-glyph/512/film-reel--v2.png';\n  }\n};\n"],"names":["location","useLocation","navigate","useNavigate","className","styles","type","onClick","state","from","size","useState","movieData","setMovieData","isLoading","setIsLoading","movieId","useParams","useEffect","fetchMovie","getMovieById","imgUrl","getImgUrl","poster_path","movieTitle","title","Date","release_date","getFullYear","userScore","Math","round","vote_average","genresNames","genres","length","map","genre","name","join","Loader","src","alt","overview","to","Suspense","fallback","imageUrl","undefined"],"sourceRoot":""}