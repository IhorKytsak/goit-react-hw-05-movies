{"version":3,"file":"static/js/12.61221c35.chunk.js","mappings":"6PACA,EAA2B,2B,SCgC3B,EA7BiB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OAClB,OACE,eAAIC,UAAWC,EAAf,SACGF,EAAOG,KAAI,SAAAC,GACV,OACE,2BACE,gBAAKC,IAAKD,EAAME,OAAQC,IAAKH,EAAMI,QACnC,4BACE,wBAAKJ,EAAMI,QACX,uCAAeJ,EAAMK,kBAJhBL,EAAMM,GAQlB,KAGN,E,SC2BD,EAvCa,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOb,EAAP,KAAec,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAuBA,OArBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,6FACrBF,GAAa,GADQ,UAGGG,EAAAA,EAAAA,IAAaR,GAHhB,OAGfS,EAHe,OAIfC,EAAoBD,EAAUjB,KAClC,gBAAGK,EAAH,EAAGA,KAAMc,EAAT,EAASA,aAAcb,EAAvB,EAAuBA,UAAvB,MAA4C,CAC1CD,KAAAA,EACAE,GAFF,EAAkCA,GAGhCD,UAAAA,EACAH,QAAQiB,EAAAA,EAAAA,GAAUD,GAJpB,IAQFR,EAAUO,GACVL,GAAa,GAdQ,2CAAH,qDAiBpBE,GACD,GAAE,CAACP,KAGF,gCACGI,IAAa,SAACS,EAAA,EAAD,IACK,IAAlBxB,EAAOyB,QAAiBV,GAGvB,SAAC,EAAD,CAAUf,OAAQA,KAFlB,gEAMP,C,sDC7CM,IAAMuB,EAAY,SAAAG,GACvB,OAAiB,OAAbA,QAAkCC,IAAbD,EACjB,kCAAN,OAAyCA,GAElC,2DAEV,C","sources":["webpack://goit-react-hw-05-movies/./src/components/CastList/CastList.module.css?59ac","components/CastList/CastList.jsx","pages/Cast/Cast.jsx","utils/getImgUrl.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"CastList_castList__YQOUt\"};","import PropTypes from 'prop-types';\n\nimport styles from './CastList.module.css';\n\nconst CastList = ({ actors }) => {\n  return (\n    <ul className={styles.castList}>\n      {actors.map(actor => {\n        return (\n          <li key={actor.id}>\n            <img src={actor.imgUrl} alt={actor.name} />\n            <div>\n              <h4>{actor.name}</h4>\n              <p>Character: {actor.character}</p>\n            </div>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nCastList.propTypes = {\n  actors: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      imgUrl: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default CastList;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieCast } from 'utils/movieApi';\nimport { getImgUrl } from 'utils/getImgUrl';\nimport CastList from 'components/CastList/CastList';\nimport Loader from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [actors, setActors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const ferchMovieCast = async () => {\n      setIsLoading(true);\n\n      const movieCast = await getMovieCast(movieId);\n      const formatedMovieCast = movieCast.map(\n        ({ name, profile_path, character, id }) => ({\n          name,\n          id,\n          character,\n          imgUrl: getImgUrl(profile_path),\n        })\n      );\n\n      setActors(formatedMovieCast);\n      setIsLoading(false);\n    };\n\n    ferchMovieCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {actors.length === 0 && !isLoading ? (\n        <p>Unfortunately no actors was found.</p>\n      ) : (\n        <CastList actors={actors} />\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","export const getImgUrl = imageUrl => {\n  if (imageUrl !== null && imageUrl !== undefined) {\n    return `https://image.tmdb.org/t/p/w300${imageUrl}`;\n  } else {\n    return 'https://img.icons8.com/pastel-glyph/512/film-reel--v2.png';\n  }\n};\n"],"names":["actors","className","styles","map","actor","src","imgUrl","alt","name","character","id","movieId","useParams","useState","setActors","isLoading","setIsLoading","useEffect","ferchMovieCast","getMovieCast","movieCast","formatedMovieCast","profile_path","getImgUrl","Loader","length","imageUrl","undefined"],"sourceRoot":""}