{"version":3,"file":"static/js/866.08dc6a2c.chunk.js","mappings":"oJAUA,IARqB,SAAC,GAAiB,IAAfA,EAAc,EAAdA,QACtB,OAAO,gBAAIC,UAAU,UAAd,oBAAgCD,IACxC,C,gKCHD,EAA8B,6B,SCoE9B,EA5DgB,WACd,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KA0BA,IAxBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,sGAEjBJ,GAAa,GAFI,UAIKK,EAAAA,EAAAA,IAAgBX,GAJrB,OAIXG,EAJW,OAMXS,EAAkBT,EAAQU,KAAI,kBAA8B,CAChEC,OADkC,EAAGA,OAErCC,QAFkC,EAAWA,QAG7CC,GAHkC,EAAoBA,GAApB,IAMpCZ,EAAWQ,GAZM,gDAcjBJ,EAAS,KAAMV,SAdE,yBAgBjBQ,GAAa,GAhBI,4EAAH,qDAoBlBI,GACD,GAAE,CAACV,IAEAO,EACF,OAAO,SAACU,EAAA,EAAD,CAAcnB,QAASS,IAGhC,GAAIF,EACF,OAAO,SAACa,EAAA,EAAD,IAGT,IAAMC,GACJ,eAAIpB,UAAWqB,EAAf,SACGjB,EAAQU,KAAI,SAAAQ,GAAM,OACjB,2BACE,qCAAaA,EAAOP,WACpB,uBAAIO,EAAON,YAFJM,EAAOL,GADC,MASjBM,GAAY,yEAElB,OACE,gCACGjB,IAAa,SAACa,EAAA,EAAD,IACM,IAAnBf,EAAQoB,QAAiBlB,EAAwBc,EAAZG,IAG3C,C,mMCjEDE,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAe,mCAAG,WAAOC,EAAOC,GAAd,uFACNJ,EAAAA,EAAAA,IAAA,gCACIC,EADJ,kBACqBE,GAC1C,CAAEC,OAAQA,IAHiB,cACvBC,EADuB,yBAKtBA,EAASC,MALa,2CAAH,wDAQfC,EAAiB,mCAAG,oGACRP,EAAAA,EAAAA,IAAA,qCAAwCC,IADhC,cACzBI,EADyB,yBAExBA,EAASC,KAAKE,SAFU,2CAAH,qDAKjBC,EAAY,mCAAG,WAAMjB,GAAN,uFACHQ,EAAAA,EAAAA,IAAA,iBAAoBR,EAApB,oBAAkCS,IAD/B,cACpBI,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZI,EAAY,mCAAG,WAAMlB,GAAN,uFACHQ,EAAAA,EAAAA,IAAA,iBAAoBR,EAApB,4BAA0CS,IADvC,cACpBI,EADoB,yBAEnBA,EAASC,KAAKK,MAFK,2CAAH,sDAKZxB,EAAe,mCAAG,WAAMK,GAAN,uFACNQ,EAAAA,EAAAA,IAAA,iBAAoBR,EAApB,4BAA0CS,IADpC,cACvBI,EADuB,yBAEtBA,EAASC,KAAKE,SAFQ,2CAAH,qD","sources":["components/ErrorMessage.jsx","webpack://goit-react-hw-05-movies/./src/pages/Reviews/Reviews.module.css?9a3e","pages/Reviews/Reviews.jsx","utils/movieApi.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nconst ErrorMessage = ({ message }) => {\n  return <h3 className=\"message\">Error: {message}</h3>;\n};\n\nErrorMessage.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default ErrorMessage;\n","// extracted by mini-css-extract-plugin\nexport default {\"reviewsList\":\"Reviews_reviewsList__1BB-J\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieReviews } from '../../utils/movieApi';\nimport Loader from 'components/Loader';\nimport ErrorMessage from 'components/ErrorMessage';\n\nimport styles from './Reviews.module.css';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        setIsLoading(true);\n\n        const reviews = await getMovieReviews(movieId);\n\n        const formatedReviews = reviews.map(({ author, content, id }) => ({\n          author,\n          content,\n          id,\n        }));\n\n        setReviews(formatedReviews);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  if (error) {\n    return <ErrorMessage message={error} />;\n  }\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  const reviewsList = (\n    <ul className={styles.reviewsList}>\n      {reviews.map(review => (\n        <li key={review.id}>\n          <h3>Author: {review.author}</h3>\n          <p>{review.content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n\n  const emptyList = <p>We don't have any reviews for this movie yet.</p>;\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {reviews.length === 0 && !isLoading ? emptyList : reviewsList}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '9f418ce48484288694da4da227268766';\n\nexport const getMovieByQuery = async (query, signal) => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`,\n    { signal: signal }\n  );\n  return response.data;\n};\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return response.data.results;\n};\n"],"names":["message","className","movieId","useParams","useState","reviews","setReviews","isLoading","setIsLoading","error","setError","useEffect","fetchReviews","getMovieReviews","formatedReviews","map","author","content","id","ErrorMessage","Loader","reviewsList","styles","review","emptyList","length","axios","API_KEY","getMovieByQuery","query","signal","response","data","getTrendingMovies","results","getMovieById","getMovieCast","cast"],"sourceRoot":""}