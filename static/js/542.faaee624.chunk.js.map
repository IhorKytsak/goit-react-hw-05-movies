{"version":3,"file":"static/js/542.faaee624.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/BackButton/BackButton.module.css?d3a5","components/BackButton/BackButton.jsx","webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","utils/getImgUrl.js","utils/movieApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"backBtn\":\"BackButton_backBtn__g7sA7\"};","import { useNavigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { HiOutlineArrowNarrowLeft } from 'react-icons/hi';\n\nimport styles from './BackButton.module.css';\n\nconst BackButton = ({ to }) => {\n  const navigate = useNavigate();\n\n  return (\n    <button\n      className={styles.backBtn}\n      type=\"button\"\n      onClick={() => {\n        navigate(to);\n      }}\n    >\n      <HiOutlineArrowNarrowLeft size={30} />\n      Go back\n    </button>\n  );\n};\n\nBackButton.propTypes = {\n  to: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      pathname: PropTypes.string,\n      search: PropTypes.string,\n      hash: PropTypes.string,\n      key: PropTypes.string,\n    }),\n  ]).isRequired,\n};\n\nexport default BackButton;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieWrapper\":\"MovieDetails_movieWrapper__u2mNI\",\"movieImg\":\"MovieDetails_movieImg__5UJtY\",\"movieInfo\":\"MovieDetails_movieInfo__4EKMk\",\"movieInfoWithTitle\":\"MovieDetails_movieInfoWithTitle__Qy-bc\",\"additionalInfoWrapper\":\"MovieDetails_additionalInfoWrapper__URkTY\"};","import { useEffect, useState, Suspense } from 'react';\nimport { NavLink, useParams, useLocation, Outlet } from 'react-router-dom';\n\nimport BackButton from 'components/BackButton/BackButton';\nimport Loader from 'components/Loader';\nimport { getMovieById } from 'utils/movieApi';\nimport { getImgUrl } from 'utils/getImgUrl';\n\nimport styles from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const [movieData, setMovieData] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backUrl = location?.state?.from ?? '/';\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      setIsLoading(true);\n\n      const movieData = await getMovieById(movieId);\n\n      const imgUrl = getImgUrl(movieData.poster_path);\n      movieData.imgUrl = imgUrl;\n\n      setMovieData(movieData);\n      setIsLoading(false);\n    };\n\n    fetchMovie();\n  }, [movieId]);\n\n  const movieTitle = `${movieData.title} ${new Date(\n    movieData.release_date\n  ).getFullYear()}`;\n\n  const userScore = `User Score: (${Math.round(movieData.vote_average * 10)}%)`;\n\n  const genresNames =\n    movieData.genres && movieData.genres.length > 0\n      ? movieData.genres.map(genre => genre.name).join(' ')\n      : 'unknown';\n\n  return (\n    <div>\n      <BackButton to={backUrl} />\n      {isLoading && <Loader />}\n\n      {!isLoading && (\n        <>\n          <div className={styles.movieWrapper}>\n            <img\n              className={styles.movieImg}\n              src={movieData.imgUrl}\n              alt={movieData.title}\n            />\n            <div className={styles.movieInfo}>\n              <h1>{movieTitle}</h1>\n              <p>{userScore}</p>\n              <div className={styles.movieInfoWithTitle}>\n                <h3>Overview</h3>\n                <p>{movieData.overview}</p>\n              </div>\n              <div className={styles.movieInfoWithTitle}>\n                <h4>Genres</h4>\n                <p>{genresNames}</p>\n              </div>\n            </div>\n          </div>\n\n          <div className={styles.additionalInfoWrapper}>\n            <h3>Additional information</h3>\n            <ul>\n              <li>\n                <NavLink to={'cast'} state={location.state}>\n                  Cast\n                </NavLink>\n              </li>\n              <li>\n                <NavLink to={'reviews'} state={location.state}>\n                  Reviews\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","export const getImgUrl = imageUrl => {\n  if (imageUrl !== null && imageUrl !== undefined) {\n    return `https://image.tmdb.org/t/p/w300${imageUrl}`;\n  } else {\n    return 'https://img.icons8.com/pastel-glyph/512/film-reel--v2.png';\n  }\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '9f418ce48484288694da4da227268766';\n\nexport const getMovieByQuery = async (query, signal) => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`,\n    { signal: signal }\n  );\n  return response.data;\n};\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return response.data.results;\n};\n"],"names":["to","navigate","useNavigate","className","styles","type","onClick","size","useState","movieData","setMovieData","isLoading","setIsLoading","movieId","useParams","location","useLocation","backUrl","state","from","useEffect","fetchMovie","getMovieById","imgUrl","getImgUrl","poster_path","movieTitle","title","Date","release_date","getFullYear","userScore","Math","round","vote_average","genresNames","genres","length","map","genre","name","join","Loader","src","alt","overview","Suspense","fallback","imageUrl","undefined","axios","API_KEY","getMovieByQuery","query","signal","response","data","getTrendingMovies","results","id","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}