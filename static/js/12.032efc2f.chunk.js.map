{"version":3,"file":"static/js/12.032efc2f.chunk.js","mappings":"sQACA,EAA2B,2B,SCgC3B,EA7BiB,SAAC,GAAc,IAAZA,EAAW,EAAXA,KAClB,OACE,eAAIC,UAAWC,EAAf,SACGF,EAAKG,KAAI,SAAAC,GACR,OACE,2BACE,gBAAKC,IAAKD,EAAME,OAAQC,IAAKH,EAAMI,QACnC,4BACE,wBAAKJ,EAAMI,QACX,uCAAeJ,EAAMK,kBAJhBL,EAAMM,GAQlB,KAGN,E,UC2BD,EAvCa,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOb,EAAP,KAAac,EAAb,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAuBA,OArBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,6FACrBF,GAAa,GADQ,UAGGG,EAAAA,EAAAA,IAAaR,GAHhB,OAGfS,EAHe,OAIfC,EAAoBD,EAAUjB,KAClC,gBAAGK,EAAH,EAAGA,KAAMc,EAAT,EAASA,aAAcb,EAAvB,EAAuBA,UAAvB,MAA4C,CAC1CD,KAAAA,EACAE,GAFF,EAAkCA,GAGhCD,UAAAA,EACAH,QAAQiB,EAAAA,EAAAA,GAAUD,GAJpB,IAQFR,EAAQO,GACRL,GAAa,GAdQ,2CAAH,qDAiBpBE,GACD,GAAE,CAACP,KAGF,gCACGI,IAAa,SAACS,EAAA,EAAD,IACG,IAAhBxB,EAAKyB,QAAiBV,GAGrB,SAAC,EAAD,CAAUf,KAAMA,KAFhB,8DAMP,C,uDC7CM,IAAMuB,EAAY,SAAAG,GACvB,OAAiB,OAAbA,QAAkCC,IAAbD,EACjB,kCAAN,OAAyCA,GAElC,2DAEV,C,mMCJDE,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAe,mCAAG,WAAOC,EAAOC,GAAd,uFACNJ,EAAAA,EAAAA,IAAA,gCACIC,EADJ,kBACqBE,GAC1C,CAAEC,OAAQA,IAHiB,cACvBC,EADuB,yBAKtBA,EAASC,MALa,2CAAH,wDAQfC,EAAiB,mCAAG,oGACRP,EAAAA,EAAAA,IAAA,qCAAwCC,IADhC,cACzBI,EADyB,yBAExBA,EAASC,KAAKE,SAFU,2CAAH,qDAKjBC,EAAY,mCAAG,WAAM3B,GAAN,uFACHkB,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,oBAAkCmB,IAD/B,cACpBI,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZf,EAAY,mCAAG,WAAMT,GAAN,uFACHkB,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,4BAA0CmB,IADvC,cACpBI,EADoB,yBAEnBA,EAASC,KAAKlC,MAFK,2CAAH,sDAKZsC,EAAe,mCAAG,WAAM5B,GAAN,uFACNkB,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,4BAA0CmB,IADpC,cACvBI,EADuB,yBAEtBA,EAASC,KAAKE,SAFQ,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/CastList/CastList.module.css?59ac","components/CastList/CastList.jsx","pages/Cast/Cast.jsx","utils/getImgUrl.js","utils/movieApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"CastList_castList__YQOUt\"};","import PropTypes from 'prop-types';\n\nimport styles from './CastList.module.css';\n\nconst CastList = ({ cast }) => {\n  return (\n    <ul className={styles.castList}>\n      {cast.map(actor => {\n        return (\n          <li key={actor.id}>\n            <img src={actor.imgUrl} alt={actor.name} />\n            <div>\n              <h4>{actor.name}</h4>\n              <p>Character: {actor.character}</p>\n            </div>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nCastList.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      imgUrl: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default CastList;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieCast } from 'utils/movieApi';\nimport { getImgUrl } from 'utils/getImgUrl';\nimport CastList from 'components/CastList/CastList';\nimport Loader from 'components/Loader';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const ferchMovieCast = async () => {\n      setIsLoading(true);\n\n      const movieCast = await getMovieCast(movieId);\n      const formatedMovieCast = movieCast.map(\n        ({ name, profile_path, character, id }) => ({\n          name,\n          id,\n          character,\n          imgUrl: getImgUrl(profile_path),\n        })\n      );\n\n      setCast(formatedMovieCast);\n      setIsLoading(false);\n    };\n\n    ferchMovieCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {cast.length === 0 && !isLoading ? (\n        <p>Unfortunately no cast was found.</p>\n      ) : (\n        <CastList cast={cast} />\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","export const getImgUrl = imageUrl => {\n  if (imageUrl !== null && imageUrl !== undefined) {\n    return `https://image.tmdb.org/t/p/w300${imageUrl}`;\n  } else {\n    return 'https://img.icons8.com/pastel-glyph/512/film-reel--v2.png';\n  }\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '9f418ce48484288694da4da227268766';\n\nexport const getMovieByQuery = async (query, signal) => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`,\n    { signal: signal }\n  );\n  return response.data;\n};\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return response.data.results;\n};\n"],"names":["cast","className","styles","map","actor","src","imgUrl","alt","name","character","id","movieId","useParams","useState","setCast","isLoading","setIsLoading","useEffect","ferchMovieCast","getMovieCast","movieCast","formatedMovieCast","profile_path","getImgUrl","Loader","length","imageUrl","undefined","axios","API_KEY","getMovieByQuery","query","signal","response","data","getTrendingMovies","results","getMovieById","getMovieReviews"],"sourceRoot":""}