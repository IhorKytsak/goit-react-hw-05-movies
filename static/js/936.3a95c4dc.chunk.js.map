{"version":3,"file":"static/js/936.3a95c4dc.chunk.js","mappings":"oJAUA,IARqB,SAAC,GAAiB,IAAfA,EAAc,EAAdA,QACtB,OAAO,gBAAIC,UAAU,UAAd,oBAAgCD,IACxC,C,+ECHD,EAAuB,yBAAvB,EAA2D,6B,SCqC3D,EAjCmB,SAAC,GAAgB,IAAdE,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,GAAKF,EAIL,OAAsB,IAAlBA,EAAOG,QACF,cAAGJ,UAAU,UAAb,yBAIP,eAAIA,UAAWK,EAAf,SACGJ,EAAOK,KAAI,SAAAC,GAAK,OACf,eAAIP,UAAWK,EAAf,UACE,SAAC,KAAD,CAAMG,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMT,GAAhD,SACGK,EAAMK,SAF0BL,EAAME,GAD5B,KAStB,C,iKC1BD,EAAwB,oB,SCoDxB,EA5Ca,WACX,OAA4CI,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAwBA,OAtBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,sGAExBJ,GAAa,GAFW,UAIHK,EAAAA,EAAAA,MAJG,OAIlBrB,EAJkB,OAKlBsB,EAAiBtB,EAAOK,KAAI,kBAAoB,CACpDG,GADgC,EAAGA,GAEnCG,MAFgC,EAAOA,MAAP,IAKlCG,EAAkBQ,GAVM,gDAYxBJ,EAAS,KAAMpB,SAZS,yBAcxBkB,GAAa,GAdW,4EAAH,qDAkBzBI,GACD,GAAE,IAECH,GACK,SAACM,EAAA,EAAD,CAAczB,QAASmB,IAG5BF,GACK,SAACS,EAAA,EAAD,KAIP,4BACE,eAAIzB,UAAWK,EAAf,6BAEA,SAACqB,EAAA,EAAD,CAAYzB,OAAQa,MAGzB,C,mMCjDDa,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAe,mCAAG,WAAOC,EAAOC,GAAd,uFACNJ,EAAAA,EAAAA,IAAA,gCACIC,EADJ,kBACqBE,GAC1C,CAAEC,OAAQA,IAHiB,cACvBC,EADuB,yBAKtBA,EAASC,MALa,2CAAH,wDAQfX,EAAiB,mCAAG,oGACRK,EAAAA,EAAAA,IAAA,qCAAwCC,IADhC,cACzBI,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,qDAKjBC,EAAY,mCAAG,WAAM1B,GAAN,uFACHkB,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,oBAAkCmB,IAD/B,cACpBI,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZG,EAAY,mCAAG,WAAM3B,GAAN,uFACHkB,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,4BAA0CmB,IADvC,cACpBI,EADoB,yBAEnBA,EAASC,KAAKI,MAFK,2CAAH,sDAKZC,EAAe,mCAAG,WAAM7B,GAAN,uFACNkB,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,4BAA0CmB,IADpC,cACvBI,EADuB,yBAEtBA,EAASC,KAAKC,SAFQ,2CAAH,qD","sources":["components/ErrorMessage.jsx","webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.js","webpack://goit-react-hw-05-movies/./src/pages/Home/Home.module.css?1370","pages/Home/Home.jsx","utils/movieApi.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nconst ErrorMessage = ({ message }) => {\n  return <h3 className=\"message\">Error: {message}</h3>;\n};\n\nErrorMessage.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default ErrorMessage;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__0Owr9\",\"listItem\":\"MoviesList_listItem__LULLo\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport styles from './MoviesList.module.css';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  if (!movies) {\n    return;\n  }\n\n  if (movies.length === 0) {\n    return <p className=\"message\">Not found!</p>;\n  }\n\n  return (\n    <ul className={styles.list}>\n      {movies.map(movie => (\n        <li className={styles.listItem} key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Home_title__L087v\"};","import { useEffect, useState } from 'react';\n\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Loader from 'components/Loader';\nimport ErrorMessage from 'components/ErrorMessage';\nimport { getTrendingMovies } from 'utils/movieApi';\n\nimport styles from './Home.module.css';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      try {\n        setIsLoading(true);\n\n        const movies = await getTrendingMovies();\n        const formatedMovies = movies.map(({ id, title }) => ({\n          id,\n          title,\n        }));\n\n        setTrendingMovies(formatedMovies);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchTrendingMovies();\n  }, []);\n\n  if (error) {\n    return <ErrorMessage message={error} />;\n  }\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <div>\n      <h1 className={styles.title}>Trending today</h1>\n\n      <MoviesList movies={trendingMovies} />\n    </div>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '9f418ce48484288694da4da227268766';\n\nexport const getMovieByQuery = async (query, signal) => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`,\n    { signal: signal }\n  );\n  return response.data;\n};\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return response.data.results;\n};\n"],"names":["message","className","movies","location","useLocation","length","styles","map","movie","to","id","state","from","title","useState","trendingMovies","setTrendingMovies","isLoading","setIsLoading","error","setError","useEffect","fetchTrendingMovies","getTrendingMovies","formatedMovies","ErrorMessage","Loader","MoviesList","axios","API_KEY","getMovieByQuery","query","signal","response","data","results","getMovieById","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}