{"version":3,"file":"static/js/600.171050d1.chunk.js","mappings":"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","sources":["components/ErrorMessage.jsx","webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.js","webpack://goit-react-hw-05-movies/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx","utils/movieApi.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nconst ErrorMessage = ({ message }) => {\n  return <h3 className=\"message\">Error: {message}</h3>;\n};\n\nErrorMessage.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default ErrorMessage;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__0Owr9\",\"listItem\":\"MoviesList_listItem__LULLo\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport styles from './MoviesList.module.css';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  if (!movies) {\n    return;\n  }\n\n  if (movies.length === 0) {\n    return <p className=\"message\">Not found!</p>;\n  }\n\n  return (\n    <ul className={styles.list}>\n      {movies.map(movie => (\n        <li className={styles.listItem} key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"SearchForm_formWrapper__hZioc\"};","import PropTypes from 'prop-types';\nimport { BiSearchAlt } from 'react-icons/bi';\n\nimport styles from './SearchForm.module.css';\n\nconst SearchForm = ({ onSearchMovies }) => {\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const form = event.target;\n    const searchQuery = form.elements.query.value.trim();\n\n    if (searchQuery === '') {\n      return;\n    }\n\n    onSearchMovies(searchQuery);\n    form.reset();\n  };\n\n  return (\n    <form className={styles.formWrapper} onSubmit={handleSubmit}>\n      <input type=\"text\" name=\"query\" autoComplete=\"off\" required />\n      <button>\n        <BiSearchAlt />\n      </button>\n    </form>\n  );\n};\n\nSearchForm.propTypes = {\n  onSearchMovies: PropTypes.func.isRequired,\n};\n\nexport default SearchForm;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport Loader from 'components/Loader';\nimport ErrorMessage from 'components/ErrorMessage';\nimport { getMovieByQuery } from 'utils/movieApi';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const queryParam = searchParams.get('query');\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const fetchSearchMovies = async () => {\n      try {\n        setIsLoading(true);\n\n        const movies = await getMovieByQuery(queryParam, controller.signal);\n        const modifaedMovies = movies.results.map(({ id, title }) => ({\n          id,\n          title,\n        }));\n\n        setMovies(modifaedMovies);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    if (queryParam) {\n      fetchSearchMovies();\n    }\n\n    return () => {\n      controller.abort();\n    };\n  }, [queryParam]);\n\n  const searchMoviesHandler = query => {\n    if (query !== queryParam) {\n      setMovies([]);\n    }\n\n    setSearchParams({ query });\n  };\n\n  if (error && error !== 'canceled') {\n    return <ErrorMessage message={error} />;\n  }\n\n  return (\n    <div>\n      <SearchForm onSearchMovies={searchMoviesHandler} />\n      {isLoading ? <Loader /> : <MoviesList movies={movies} />}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '9f418ce48484288694da4da227268766';\n\nexport const getMovieByQuery = async (query, signal) => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`,\n    { signal: signal }\n  );\n  return response.data;\n};\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return response.data.results;\n};\n"],"names":["message","className","movies","location","useLocation","length","styles","map","movie","to","id","state","from","title","onSearchMovies","onSubmit","event","preventDefault","form","target","searchQuery","elements","query","value","trim","reset","type","name","autoComplete","required","useState","setMovies","isLoading","setIsLoading","error","setError","useSearchParams","searchParams","setSearchParams","queryParam","get","useEffect","controller","AbortController","fetchSearchMovies","getMovieByQuery","signal","modifaedMovies","results","abort","ErrorMessage","Loader","MoviesList","axios","API_KEY","response","data","getTrendingMovies","getMovieById","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}